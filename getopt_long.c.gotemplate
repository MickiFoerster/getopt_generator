#include <stdio.h>
#include <stdlib.h>
#include <getopt.h>

int
process_commandline (int argc, char **argv) {
    struct option long_options[] = {
        {{range .Option}}{{.OptionDef}},
        {{end}}{0, 0, 0, 0}
    };
    int c;

    while (1) {
        /* getopt_long stores the option index here. */
        int option_index = 0;

        c = getopt_long (argc, argv, "{{.OptionString}}",
                long_options, &option_index);

        /* Detect the end of the options. */
        if (c == -1)
            break;

        switch (c) {
            case 0:
#               if 0 
                /* We don't use 3rd argument != 0. Therefore this should be never be the case */
                /* If this option set a flag, do nothing else now. */
                if (long_options[option_index].flag != 0) { break; }
                printf ("option %s", long_options[option_index].name);
                if (optarg)
                    printf (" with arg %s", optarg);
                printf ("\n");
#               endif
                break;
            {{range .Option}}{{.OptionTest}}{{end}}
            case '?':
                /* getopt_long already printed an error message. */
                break;
            default:
                fprintf(stderr, "unhandled case\n");
                abort ();
        }
    }

    /* Print any remaining command line arguments (not options). */
    if (optind < argc)
    {
        printf ("non-option ARGV-elements: ");
        while (optind < argc)
            printf ("%s ", argv[optind++]);
        putchar ('\n');
    }

    return 0;
}

int main(int argc, char* argv[]) {
    return process_commandline(argc, argv);
}
